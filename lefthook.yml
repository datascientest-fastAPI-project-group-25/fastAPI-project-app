# Lefthook configuration for FastAPI project
# See https://github.com/evilmartians/lefthook for more information

# Global options
skip_output:
  - meta
  - summary
  - success

# Pre-commit hooks
pre-commit:
  parallel: true
  commands:
    black:
      glob: "*.py"
      run: black {staged_files}
    ruff:
      glob: "*.py"
      run: ruff check --fix {staged_files} && ruff format {staged_files}
    bandit:
      glob: "*.py"
      run: bandit -ll {staged_files}
    trailing-whitespace:
      glob: "*"
      exclude: "^.*\\.snap$"
      run: sed -i '' -e 's/[[:space:]]*$//' {staged_files}
    check-yaml:
      glob: "*.{yml,yaml}"
      run: yamllint -d relaxed {staged_files}
    check-merge-conflict:
      glob: "*"
      run: grep -L "^<<<<<<< " {staged_files} || true

# Pre-push hooks
pre-push:
  parallel: true
  commands:
    block-main-push:
      run: |
        # Get the current branch and target branch
        current_branch=$(git symbolic-ref --short HEAD)
        target_branch=$(git rev-parse --abbrev-ref @{upstream} | sed 's/origin\///')

        # Block direct pushes to main
        if [ "$current_branch" = "main" ] || [ "$target_branch" = "main" ]; then
          echo "❌ ERROR: Direct pushes to main branch are not allowed."
          echo "Please create a feature (feat/*) or fix branch and submit a pull request instead."
          echo "Run: ./scripts/create-branch.sh to create a proper branch."
          exit 1
        fi
    pytest:
      root: "backend/"
      run: pytest -xvs app/tests/

# Post-checkout hook to prompt for branch creation when checking out main
post-checkout:
  commands:
    branch-prompt:
      run: ./hooks/post-checkout.sh $1 $2 $3

# Commit message validation - simplified to be less strict
commit-msg:
  commands:
    lint-commit-msg:
      run: |
        commit_msg_file=$1
        commit_msg=$(cat $commit_msg_file)

        # Basic validation - just ensure there's a meaningful message
        if [ ${#commit_msg} -lt 10 ]; then
          echo "❌ Commit message is too short."
          echo "Please provide a meaningful commit message (at least 10 characters)."
          exit 1
        fi
