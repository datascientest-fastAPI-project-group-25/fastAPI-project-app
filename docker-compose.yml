services:
  # Traefik reverse proxy
  traefik:
    image: traefik:v2.10
    restart: always
    ports:
      - "80:80" # Web
      - "8080:8080" # Dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik.yml:/etc/traefik/traefik.yml:ro
    networks:
      - default

  # Frontend with Bun for faster builds and development
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development
    restart: "no"
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app/frontend
      - ./package.json:/app/package.json
      - ./turbo.json:/app/turbo.json
      - frontend-bun-cache:/app/node_modules
      - turbo-cache:/app/.turbo
    environment:
      - VITE_API_URL=http://api.localhost
    extra_hosts:
      - "host.docker.internal:host-gateway"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`dashboard.localhost`)"
      - "traefik.http.services.frontend.loadbalancer.server.port=5173"

  # Backend with improved caching
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: development
    restart: "no"
    ports:
      - "8000:8000"
    volumes:
      - ./backend/app:/app/app
      - backend-cache:/root/.cache/uv
    env_file:
      - .env
    environment:
      - POSTGRES_SERVER=db
      - SMTP_HOST=mailcatcher
      - SMTP_PORT=1025
      - SMTP_TLS=false
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - db
    command: sh -c "bash /app/scripts/prestart.sh && fastapi run --reload app/main.py"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`api.localhost`)"
      - "traefik.http.services.backend.loadbalancer.server.port=8000"

  # Database
  db:
    image: postgres:12
    restart: always
    env_file:
      - .env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - app-db-data:/var/lib/postgresql/data

networks:
  default:
    name: fastapi-project-app_default

volumes:
  frontend-bun-cache:
  backend-cache:
  app-db-data:
  turbo-cache:
