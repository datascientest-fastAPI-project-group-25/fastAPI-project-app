name: Reusable Image Build and Push

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
        description: "Environment to build for (stg or prod)"
      version_bump_type:
        required: false
        type: string
        default: "patch"
        description: "Type of version bump (major, minor, patch)"
      image_tag_prefix:
        required: false
        type: string
        default: ""
        description: "Optional prefix for image tags"

permissions:
  contents: write
  packages: write

jobs:
  bump-version:
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.bump-version.outputs.new_version }}
      bump_type: ${{ inputs.version_bump_type }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Bump version
        id: bump-version
        run: |
          BUMP_TYPE="${{ inputs.version_bump_type }}"
          python version.py bump $BUMP_TYPE
          NEW_VERSION=$(python version.py get)
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "Version bumped to $NEW_VERSION"

      - name: Commit and push version bump
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add VERSION
          git commit -m "chore: bump version to ${{ steps.bump-version.outputs.new_version }} [skip ci]"
          git push

  build-and-push:
    needs: bump-version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set image tags
        id: set-tags
        run: |
          ENV="${{ inputs.environment }}"
          VERSION="${{ needs.bump-version.outputs.new_version }}"
          PREFIX="${{ inputs.image_tag_prefix }}"

          if [ -n "$PREFIX" ]; then
            PREFIX="${PREFIX}-"
          fi

          BACKEND_TAGS="ghcr.io/${{ github.repository_owner | lower }}/${{ github.event.repository.name | lower }}-backend:${PREFIX}${ENV},ghcr.io/${{ github.repository_owner | lower }}/${{ github.event.repository.name | lower }}-backend:${PREFIX}${VERSION}"
          FRONTEND_TAGS="ghcr.io/${{ github.repository_owner | lower }}/${{ github.event.repository.name | lower }}-frontend:${PREFIX}${ENV},ghcr.io/${{ github.repository_owner | lower }}/${{ github.event.repository.name | lower }}-frontend:${PREFIX}${VERSION}"

          echo "backend_tags=$BACKEND_TAGS" >> $GITHUB_OUTPUT
          echo "frontend_tags=$FRONTEND_TAGS" >> $GITHUB_OUTPUT

      - name: Build and push backend image
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ${{ steps.set-tags.outputs.backend_tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            APP_VERSION=${{ needs.bump-version.outputs.new_version }}
            GIT_HASH=${{ github.sha }}
            BRANCH_TYPE=${{ inputs.environment }}

      - name: Build and push frontend image
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: ${{ steps.set-tags.outputs.frontend_tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            APP_VERSION=${{ needs.bump-version.outputs.new_version }}
            GIT_HASH=${{ github.sha }}
            BRANCH_TYPE=${{ inputs.environment }}

      - name: Comment on commit
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const sha = context.sha;
            const version = '${{ needs.bump-version.outputs.new_version }}';
            const bumpType = '${{ needs.bump-version.outputs.bump_type }}';
            const env = '${{ inputs.environment }}';
            const prefix = '${{ inputs.image_tag_prefix }}' ? '${{ inputs.image_tag_prefix }}-' : '';

            let bumpMessage = '';
            if (bumpType === 'major') {
              bumpMessage = 'Major version bump';
            } else if (bumpType === 'minor') {
              bumpMessage = 'Minor version bump';
            } else {
              bumpMessage = 'Patch version bump';
            }

            const envName = env === 'stg' ? 'Staging' : 'Production';

            github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: sha,
              body: `## ðŸš€ ${envName} Images Built and Pushed\n\n${bumpMessage}: **${version}**\n\nImages are available at:\n- \`ghcr.io/${context.repo.owner.toLowerCase()}/${context.repo.repo.toLowerCase()}-backend:${prefix}${env}\`\n- \`ghcr.io/${context.repo.owner.toLowerCase()}/${context.repo.repo.toLowerCase()}-backend:${prefix}${version}\`\n- \`ghcr.io/${context.repo.owner.toLowerCase()}/${context.repo.repo.toLowerCase()}-frontend:${prefix}${env}\`\n- \`ghcr.io/${context.repo.owner.toLowerCase()}/${context.repo.repo.toLowerCase()}-frontend:${prefix}${version}\``
            });
