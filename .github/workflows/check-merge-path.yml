name: Check Merge Path

on:
  pull_request:
    branches:
      - main

jobs:
  check-merge-path:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0  # Need full history to check branch relationships
      - name: Check if changes came through staging branch
        run: |
          PR_HEAD_SHA=${{ github.event.pull_request.head.sha }}
          TARGET_BRANCH="origin/main"
          STG_BRANCH="origin/stg"

          echo "PR Head SHA: $PR_HEAD_SHA"
          echo "Target Branch: $TARGET_BRANCH"
          echo "Staging Branch: $STG_BRANCH"

          # Fetch latest changes for branches
          git fetch origin main:refs/remotes/origin/main stg:refs/remotes/origin/stg

          # Get SHAs for branch tips
          TARGET_SHA=$(git rev-parse $TARGET_BRANCH)
          STG_SHA=$(git rev-parse $STG_BRANCH)
          echo "Target SHA: $TARGET_SHA"
          echo "Staging SHA: $STG_SHA"

          # Find the merge base between the PR head and the target branch (main)
          MERGE_BASE=$(git merge-base $PR_HEAD_SHA $TARGET_SHA)
          if [ -z "$MERGE_BASE" ]; then
            echo "::error::Could not find a common ancestor between PR head ($PR_HEAD_SHA) and $TARGET_BRANCH ($TARGET_SHA)."
            exit 1
          fi
          echo "Merge Base (HEAD vs Target): $MERGE_BASE"

          # Check if the merge base is an ancestor of the current staging branch tip.
          # This verifies that the point where the PR diverged from the target
          # is actually part of the staging branch's history.
          if git merge-base --is-ancestor "$MERGE_BASE" "$STG_SHA"; then
            echo "✓ Merge base ($MERGE_BASE) is an ancestor of the staging branch ($STG_SHA)."
          else
            echo "::error::The common ancestor ($MERGE_BASE) is not part of the staging branch history ($STG_BRANCH)."
            echo "This indicates the PR did not originate correctly from staging or staging is behind."
            echo "The proper flow is: feature -> stg -> main"
            exit 1
          fi

          # Optional: Check if the merge base is directly reachable from the stg branch tip.
          # This helps identify if the PR source branch ('stg') might be slightly outdated.
          if git rev-list $STG_SHA | grep -q $MERGE_BASE; then
             echo "✓ Merge base ($MERGE_BASE) is reachable from staging branch tip ($STG_SHA)."
          else
             echo "::warning::Merge base ($MERGE_BASE) is not directly reachable from the current staging branch tip ($STG_SHA)."
             echo "This might indicate the PR source branch ('stg') is slightly behind origin/stg, but history seems correct."
             # Consider if this should be an error depending on strictness required. For now, we allow it.
          fi

          echo "✓ Changes appear to have come through the staging branch correctly."
