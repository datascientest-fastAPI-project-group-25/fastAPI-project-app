name: Pre-commit Checks

on:
  pull_request:
    branches: [main, dev]
  push:
    branches: [main, dev]

permissions:
  contents: write
  pull-requests: write

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Cache pre-commit
        uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: ${{ runner.os }}-pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pre-commit-

      - name: Install pnpm dependencies
        run: pnpm install

      - name: Install pre-commit
        run: pip install pre-commit

      - name: Set up environment variables
        run: |
          echo "PROJECT_NAME=FastAPI" >> $GITHUB_ENV
          echo "POSTGRES_SERVER=localhost" >> $GITHUB_ENV
          echo "POSTGRES_USER=postgres" >> $GITHUB_ENV
          echo "FIRST_SUPERUSER=admin@example.com" >> $GITHUB_ENV
          echo "FIRST_SUPERUSER_PASSWORD=password" >> $GITHUB_ENV

      - name: Run formatting checks
        id: pre-commit
        run: |
          # Run only formatting and linting hooks that don't require Docker
          SKIP=pytest-check,bandit pre-commit run --all-files --show-diff-on-failure
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Push fixes if needed
        if: |
          github.event_name == 'pull_request' &&
          github.event.pull_request.head.repo.full_name == github.repository
        run: |
          if [[ -n "$(git status --porcelain)" ]]; then
            git config --global user.email "github-actions[bot]@users.noreply.github.com"
            git config --global user.name "github-actions[bot]"
            git add -A
            git commit -m "style: auto-fixes from pre-commit hooks"
            git push
          fi
