name: Reusable - Pull Request Creation Workflow

on:
  workflow_call:
    inputs:
      source_branch:
        required: true
        type: string
      target_branch:
        required: true
        type: string
      pr_title:
        required: true
        type: string
      pr_body:
        required: true
        type: string
      pr_label:
        required: false
        type: string
    secrets:
      MACHINE_USER_TOKEN:
        required: true

permissions:
  contents: write
  pull-requests: write

jobs:
  create-pr:
    runs-on: ubuntu-latest
    steps:
      - name: Install GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y gh

      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          token: ${{ secrets.MACHINE_USER_TOKEN }}
          fetch-depth: 0

      - name: Set up git merge drivers
        run: |
          chmod +x ./scripts/setup-git-hooks.sh
          ./scripts/setup-git-hooks.sh
          echo "Git merge drivers set up successfully"

      - name: Skip on Merge Commits
        run: |
          commit_message=$(git log -1 --pretty=%B)
          echo "Latest commit message: $commit_message"
          if [[ "$commit_message" == Merge* ]]; then
            echo "Merge commit detected, skipping PR creation."
            exit 0
          fi

      - name: Ensure labels exist
        env:
          GH_TOKEN: ${{ secrets.MACHINE_USER_TOKEN }}
        run: |
          LABEL="promote-to-${{ inputs.target_branch }}"
          echo "Ensuring label '$LABEL' exists..."

          # Choose color based on target branch
          if [[ "${{ inputs.target_branch }}" == "main" ]]; then
            # Orange color for staging to main (more cautionary)
            LABEL_COLOR="D93F0B"
          else
            # Green color for feature to staging
            LABEL_COLOR="0E8A16"
          fi

          # Try to create the label, ignore error if it already exists
          gh label create "$LABEL" \
            --color "$LABEL_COLOR" \
            --description "PR to promote changes to ${{ inputs.target_branch }} branch" \
            || true

      - name: Create or Update Pull Request
        id: create-pr
        env:
          GH_TOKEN: ${{ secrets.MACHINE_USER_TOKEN }}
        run: |
          echo "Promoting '${{ inputs.source_branch }}' into '${{ inputs.target_branch }}'"
          echo "Source branch: ${{ inputs.source_branch }}"
          echo "Target branch: ${{ inputs.target_branch }}"

          existing_pr_url=$(gh pr list --head "${{ inputs.source_branch }}" --base "${{ inputs.target_branch }}" --state open --json url --jq '.[0].url')

          if [ -n "$existing_pr_url" ]; then
            echo "Pull request already exists: $existing_pr_url"
            pr_url="$existing_pr_url"
            pr_number=$(basename "$pr_url" | cut -d'/' -f1)
            echo "pull-request-url=$pr_url" >> $GITHUB_OUTPUT
            echo "pull-request-number=$pr_number" >> $GITHUB_OUTPUT
          else
            pr_url=$(gh pr create \
              --base "${{ inputs.target_branch }}" \
              --head "${{ inputs.source_branch }}" \
              --title "${{ inputs.pr_title }}" \
              --body "${{ inputs.pr_body }}")
            echo "PR URL: $pr_url"
            pr_number=$(basename "$pr_url" | cut -d'/' -f1)
            echo "pull-request-url=$pr_url" >> $GITHUB_OUTPUT
            echo "pull-request-number=$pr_number" >> $GITHUB_OUTPUT
          fi

          echo "pr_number=$pr_number" >> $GITHUB_ENV

      - name: Add PR Label
        if: ${{ inputs.pr_label != '' }}
        env:
          GH_TOKEN: ${{ secrets.MACHINE_USER_TOKEN }}
        run: |
          echo "Adding label '${{ inputs.pr_label }}' to PR #${{ env.pr_number }}"
          gh pr edit ${{ env.pr_number }} --add-label "${{ inputs.pr_label }}"

      - name: PR Details
        if: success()
        run: |
          echo "PR created or already exists."
