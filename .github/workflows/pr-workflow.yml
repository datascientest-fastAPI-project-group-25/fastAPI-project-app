name: Pull Request Workflow

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main
      - dev

jobs:
  label-pr:
    name: Label PR
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: Label PR based on branch
        uses: actions/github-script@v7
        with:
          script: |
            const branch = context.payload.pull_request.head.ref;
            const labels = [];
            
            if (branch.startsWith('feat/')) {
              labels.push('feature');
            } else if (branch.startsWith('fix/')) {
              labels.push('bug');
            }
            
            if (context.payload.pull_request.base.ref === 'main') {
              labels.push('production');
            } else if (context.payload.pull_request.base.ref === 'dev') {
              labels.push('development');
            }
            
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              labels: labels
            });

  assign-reviewers:
    name: Assign Reviewers
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: Assign reviewers based on changes
        uses: actions/github-script@v7
        with:
          script: |
            const files = await github.rest.pulls.listFiles({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });
            
            const reviewers = new Set();
            
            files.data.forEach(file => {
              if (file.filename.startsWith('backend/')) {
                reviewers.add('backend-reviewer');
              } else if (file.filename.startsWith('frontend/')) {
                reviewers.add('frontend-reviewer');
              }
            });
            
            if (reviewers.size > 0) {
              await github.rest.pulls.requestReviewers({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.issue.number,
                reviewers: Array.from(reviewers)
              });
            }

  test:
    name: Run Tests
    uses: ./.github/workflows/reusable-jobs.yml
    with:
      environment: staging
      image-tag: pr-${{ github.event.pull_request.number }}
      python-version: '3.11'
      node-version: '18'
    secrets:
      AWS_ROLE_ARN: ${{ secrets.AWS_ROLE_ARN }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
