name: Development Branch Push

on:
  push:
    branches:
      - 'feat/**'
      - 'fix/**'
  workflow_dispatch: {}

permissions:
  contents: write
  pull-requests: write

jobs:
  format:
    uses: ./.github/workflows/formatting.yml
    with:
      target: all

  lint:
    needs: format
    uses: ./.github/workflows/linting.yml
    with:
      target: all

  backend-tests:
    needs: [format, lint]
    strategy:
      matrix:
        test-type: [backend-unit, backend-integration, backend-e2e]
    uses: ./.github/workflows/tests.yml
    with:
      test_type: ${{ matrix.test-type }}

  frontend-tests:
    needs: [format, lint]
    strategy:
      matrix:
        test-type: [frontend-unit, frontend-integration, frontend-e2e]
    uses: ./.github/workflows/tests.yml
    with:
      test_type: ${{ matrix.test-type }}

  create-or-update-pr:
    needs: [backend-tests, frontend-tests]
    runs-on: ubuntu-latest
    if: success() && (startsWith(github.ref, 'refs/heads/feat/') || startsWith(github.ref, 'refs/heads/fix/'))
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract branch name
        shell: bash
        run: echo "BRANCH_NAME=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV

      - name: Find existing PR
        id: find-pr
        run: |
          PR_DATA=$(gh pr list --json number,headRefName --jq '.[] | select(.headRefName=="${{ env.BRANCH_NAME }}")')
          PR_NUMBER=$(echo "$PR_DATA" | jq -r '.number')
          if [ "$PR_NUMBER" != "" ]; then
            echo "pr_exists=true" >> $GITHUB_OUTPUT
            echo "pr_number=$PR_NUMBER" >> $GITHUB_OUTPUT
          else
            echo "pr_exists=false" >> $GITHUB_OUTPUT
          fi
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Create Pull Request
        if: steps.find-pr.outputs.pr_exists == 'false'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          base: stg
          title: "${{ env.BRANCH_NAME }}: ${{ github.event.head_commit.message }}"
          body: |
            ## Changes

            This PR was automatically created by the Development Branch Push workflow.

            Commit: ${{ github.event.head_commit.message }}

            ### Checks
            - [x] Code is formatted
            - [x] Linting passes
            - [x] Tests pass
            - [ ] Documentation is updated

            ### Test Results
            - ✅ Backend Unit Tests
            - ✅ Backend Integration Tests
            - ✅ Backend E2E Tests
            - ✅ Frontend Unit Tests
            - ✅ Frontend Integration Tests
            - ✅ Frontend E2E Tests
          labels: |
            automated-pr
            ${{ startsWith(github.ref, 'refs/heads/feat/') && 'feature' || 'fix' }}
          draft: false

      - name: Update Pull Request
        if: steps.find-pr.outputs.pr_exists == 'true'
        run: |
          gh pr edit ${{ steps.find-pr.outputs.pr_number }} \
            --title "${{ env.BRANCH_NAME }}: ${{ github.event.head_commit.message }}" \
            --body "## Changes

            This PR was automatically updated by the Development Branch Push workflow.

            Latest Commit: ${{ github.event.head_commit.message }}

            ### Checks
            - [x] Code is formatted
            - [x] Linting passes
            - [x] Tests pass
            - [ ] Documentation is updated

            ### Test Results
            - ✅ Backend Unit Tests
            - ✅ Backend Integration Tests
            - ✅ Backend E2E Tests
            - ✅ Frontend Unit Tests
            - ✅ Frontend Integration Tests
            - ✅ Frontend E2E Tests"
        env:
          GH_TOKEN: ${{ github.token }}
