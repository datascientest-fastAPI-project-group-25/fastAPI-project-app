name: Development Branch Checks

on:
  push:
    branches:
      - 'feat/**'
      - 'fix/**'
  pull_request:
    branches: [stg]
  workflow_dispatch: {}

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions:
  contents: write
  pull-requests: write
  packages: write

jobs:
  check-skip:
    runs-on: ubuntu-latest
    outputs:
      should_run: ${{ steps.check.outputs.should_run }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check if should run
        id: check
        run: |
          if [[ "${{ github.event_name }}" == "push" ]]; then
            # Check if there's an open PR for this branch targeting staging
            PR_COUNT=$(gh pr list --head "${{ github.ref_name }}" --base stg --state open --json number --jq 'length')
            if [ "$PR_COUNT" -gt "0" ]; then
              echo "Found existing PR from ${{ github.ref_name }} to stg, skipping push workflow"
              echo "should_run=false" >> "$GITHUB_OUTPUT"
            else
              echo "No PR exists from ${{ github.ref_name }} to stg, running workflow"
              echo "should_run=true" >> "$GITHUB_OUTPUT"
            fi
          else
            # For pull_request events, always run
            echo "This is a pull_request event, running workflow"
            echo "should_run=true" >> "$GITHUB_OUTPUT"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  main-workflow:
    needs: [check-skip]
    if: needs.check-skip.outputs.should_run == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Format
        uses: ./.github/workflows/formatting.yml@main
        with:
          target: all

      - name: Lint
        uses: ./.github/workflows/linting.yml
        with:
          target: all

      - name: Backend tests
        uses: ./.github/workflows/tests.yml
        with:
          test_type: backend-unit

      - name: Backend integration tests
        uses: ./.github/workflows/tests.yml
        with:
          test_type: backend-integration

      - name: Backend e2e tests
        uses: ./.github/workflows/tests.yml
        with:
          test_type: backend-e2e

      - name: Frontend tests
        uses: ./.github/workflows/tests.yml
        with:
          test_type: frontend-unit

      - name: Frontend integration tests
        uses: ./.github/workflows/tests.yml
        with:
          test_type: frontend-integration

      - name: Frontend e2e tests
        uses: ./.github/workflows/tests.yml
        with:
          test_type: frontend-e2e

      - name: Trigger PR Creation
        if: github.event_name == 'push'
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          event-type: create-pr-to-stg
          client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}", "branch": "${{ github.ref_name }}", "commit_message": "${{ github.event.head_commit.message }}"}'

      - name: Build and push staging image
        if: github.event_name == 'pull_request' && github.event.pull_request.base.ref == 'stg'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository }}:staging-pr-${{ github.event.pull_request.number }}
          target: staging
          cache-from: type=gha,scope=staging
          cache-to: type=gha,mode=max,scope=staging
