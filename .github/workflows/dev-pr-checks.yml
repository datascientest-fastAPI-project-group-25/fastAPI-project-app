name: Dev PR Checks

on:
  pull_request_target:
    types: [opened, synchronize, reopened]
    branches:
      - dev

jobs:
  minimal-tests:
    name: Minimal Test Suite
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Set up uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.4.15"
          enable-cache: true

      - name: Install dependencies
        run: |
          uv venv
          source .venv/bin/activate
          uv sync
        working-directory: backend

      - name: Run unit tests
        run: |
          source .venv/bin/activate
          pytest tests/unit
        working-directory: backend

      - name: Run linting
        run: |
          source .venv/bin/activate
          black --check .
          flake8 .
        working-directory: backend

      - name: Run security checks
        run: |
          source .venv/bin/activate
          bandit -r .
          pip-audit
        working-directory: backend

  staging-deploy:
    name: Deploy to Staging
    needs: minimal-tests
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: GitHubActionsSession
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy to staging
        run: |
          # Add staging deployment commands here
          echo "Deploying to staging environment..."
