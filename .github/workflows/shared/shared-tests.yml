name: Shared Tests

on:
  workflow_call:
    inputs:
      test_type:
        description: 'Type of tests to run'
        required: true
        type: string
        default: 'unit'

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
      PROJECT_NAME: FastAPI
      POSTGRES_SERVER: localhost
      POSTGRES_USER: postgres
      FIRST_SUPERUSER: admin@example.com
      FIRST_SUPERUSER_PASSWORD: password
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
          cache: 'pip'

      - name: Install uv
        run: python -m pip install uv

      - name: Install dependencies
        run: |
          cd backend
          uv venv && . .venv/bin/activate && uv pip install -e ".[dev,lint,types,test]"

      - name: Wait for PostgreSQL
        run: |
          cd backend
          . .venv/bin/activate
          python -c "import time, psycopg; \
          while True: \
              try: \
                  conn = psycopg.connect('postgresql://postgres:postgres@localhost:5432/test_db'); \
                  conn.close(); \
                  break; \
              except Exception as e: \
                  print(f'Waiting for PostgreSQL: {e}'); \
                  time.sleep(1);"

      - name: Run tests
        run: |
          cd backend
          . .venv/bin/activate
          case ${{ inputs.test_type }} in
            "unit")
              pytest --cov=app
              ;;
            "integration")
              pytest -m integration
              ;;
            "e2e")
              pytest -m e2e
              ;;
            "security")
              bandit -r app/
              ;;
            "performance")
              pytest --benchmark-only
              ;;
            *)
              echo "Unknown test type: ${{ inputs.test_type }}"
              exit 1
              ;;
          esac
