name: PR to Staging

on:
  pull_request:
    branches: [stg]

permissions:
  contents: read
  pull-requests: write

jobs:
  validate:
    uses: ./.github/workflows/tests.yml
    strategy:
      matrix:
        test-type: [backend-unit, backend-integration, backend-e2e, frontend-unit, frontend-integration, frontend-e2e]
    with:
      test_type: ${{ matrix.test-type }}

  lint-and-format:
    uses: ./.github/workflows/linting.yml
    with:
      target: all

  build-staging:
    needs: [validate, lint-and-format]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64
          buildkitd-flags: --debug

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push staging image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository }}:staging-pr-${{ github.event.pull_request.number }}
          target: staging
          cache-from: type=gha,scope=staging
          cache-to: type=gha,mode=max,scope=staging

      - name: Deploy and test staging environment
        run: |
          docker compose -f docker-compose.yml -f docker-compose.staging.yml pull
          docker compose -f docker-compose.yml -f docker-compose.staging.yml up -d
          docker compose -f docker-compose.yml -f docker-compose.staging.yml run --rm test

      - name: Health check
        run: |
          for i in {1..30}; do
            if curl -f http://localhost:8000/api/health; then
              exit 0
            fi
            sleep 5
          done
          exit 1
